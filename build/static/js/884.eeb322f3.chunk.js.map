{"version":3,"file":"static/js/884.eeb322f3.chunk.js","mappings":"wNACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACZ,OAAO,gBAAKC,UAAWC,EAAhB,SAA+BF,EAAMG,UAC7C,E,SCHD,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2BCqEnI,EA/DkB,SAAAH,GACd,OAAoCI,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAEMC,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UAkBrB,OACI,UAAC,EAAAE,SAAD,YACI,SAAC,KAAD,CACIC,KAAMN,EACNO,QAAS,SAAAC,GAAQ,MACb,gEADa,KAIrB,SAAC,EAAD,WACI,kBACIC,QAhBK,WACjBR,GAAc,EACjB,EAeeL,UAAWC,EACXa,SA5BhB,SAA2BC,GACvBA,EAAMC,iBAEN,IAAMC,EAAgBX,EAAeY,QAAQC,MACvCC,EAAcZ,EAAaU,QAAQC,MAIzCpB,EAAMsB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GACnD,EAgBW,UAIKrB,EAAMyB,YACH,gBAAKxB,UAAWC,EAAhB,UACI,SAACwB,EAAA,EAAD,OAIR,iBAAKzB,UAAWC,EAAhB,WACI,kBAAOyB,QAAQ,SAAf,qBACA,kBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKvB,QAExC,iBAAKN,UAAWC,EAAhB,WACI,kBAAOyB,QAAQ,OAAf,mBACA,qBACIE,GAAG,OACHE,KAAK,IACLD,IAAKrB,QAEb,gBAAKR,UAAWC,EAAhB,UACI,mBAAQ8B,QAlCD,WACvB1B,GAAc,EACjB,EAgCwDL,UAAU,MAA/C,gCAQvB,ECxCD,EApBiB,WACb,OAAgCgC,EAAAA,EAAAA,GAAQC,EAAAA,IAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAEfC,GAAUC,EAAAA,EAAAA,MAUhB,OALAC,EAAAA,EAAAA,YAAU,WACS,cAAXH,GACAC,EAAQG,KAAK,UAEpB,GAAE,CAACJ,EAAQC,KAER,SAAC,EAAD,CACIZ,UAAsB,YAAXW,EACXd,WAZe,SAAAmB,GACnBN,EAAYM,EACf,GAaJ,C","sources":["webpack://react-https-tasks/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://react-https-tasks/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/NewQuote.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__pDnPq\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__wT+bC\",\"loading\":\"QuoteForm_loading__dsCGA\",\"control\":\"QuoteForm_control__mwEvR\",\"actions\":\"QuoteForm_actions__dUBOQ\"};","import { Fragment, useRef, useState } from 'react'\nimport { Prompt } from 'react-router-dom'\n\nimport Card from '../UI/Card'\nimport LoadingSpinner from '../UI/LoadingSpinner'\nimport classes from './QuoteForm.module.css'\n\nconst QuoteForm = props => {\n    const [isEntering, setIsEntering] = useState(false)\n\n    const authorInputRef = useRef()\n    const textInputRef = useRef()\n\n    function submitFormHandler(event) {\n        event.preventDefault()\n\n        const enteredAuthor = authorInputRef.current.value\n        const enteredText = textInputRef.current.value\n\n        // optional: Could validate here\n\n        props.onAddQuote({ author: enteredAuthor, text: enteredText })\n    }\n    const focusHandler = () => {\n        setIsEntering(true)\n    }\n    const finishFocusHandler = () => {\n        setIsEntering(false)\n    }\n    return (\n        <Fragment>\n            <Prompt\n                when={isEntering}\n                message={location =>\n                    'Are you sure to leave this page ? You may loose all the data !'\n                }\n            />\n            <Card>\n                <form\n                    onFocus={focusHandler}\n                    className={classes.form}\n                    onSubmit={submitFormHandler}>\n                    {props.isLoading && (\n                        <div className={classes.loading}>\n                            <LoadingSpinner />\n                        </div>\n                    )}\n\n                    <div className={classes.control}>\n                        <label htmlFor='author'>Author</label>\n                        <input type='text' id='author' ref={authorInputRef} />\n                    </div>\n                    <div className={classes.control}>\n                        <label htmlFor='text'>Text</label>\n                        <textarea\n                            id='text'\n                            rows='5'\n                            ref={textInputRef}></textarea>\n                    </div>\n                    <div className={classes.actions}>\n                        <button onClick={finishFocusHandler} className='btn'>\n                            Add Quote\n                        </button>\n                    </div>\n                </form>\n            </Card>\n        </Fragment>\n    )\n}\n\nexport default QuoteForm\n","import { useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport useHttp from '../hooks/use-http'\r\nimport { addQuote } from '../lib/api'\r\n\r\nimport QuoteForm from './../components/quotes/QuoteForm'\r\n\r\nconst NewQuote = () => {\r\n    const { sendRequest, status } = useHttp(addQuote)\r\n\r\n    const history = useHistory()\r\n    const addQuoteHadler = newQuoteData => {\r\n        sendRequest(newQuoteData)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (status === 'completed') {\r\n            history.push('/quotes')\r\n        }\r\n    }, [status, history])\r\n    return (\r\n        <QuoteForm\r\n            isLoading={status === 'pending'}\r\n            onAddQuote={addQuoteHadler}\r\n        />\r\n    )\r\n}\r\nexport default NewQuote\r\n"],"names":["props","className","classes","children","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","Fragment","when","message","location","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","newQuoteData"],"sourceRoot":""}