{"version":3,"file":"static/js/808.d01c9143.chunk.js","mappings":"wNACA,EAAuB,wB,SCkBvB,EAhBkB,SAAAA,GACd,OACI,gBAAIC,UAAWC,EAAf,WACI,+BACI,iCACI,uBAAIF,EAAMG,UAEd,gCAAaH,EAAMI,aAEvB,SAAC,KAAD,CAAMC,GAAE,iBAAYL,EAAMM,IAAML,UAAU,MAA1C,+BAKX,EChBD,EAAuB,wBAAvB,EAAyD,2BCoDzD,EArCkB,SAAAD,GACd,IAAMO,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAGXC,EAA0C,QAD5B,IAAIC,gBAAgBH,EAASI,QACjBC,IAAI,QAC9BC,EAhBS,SAACC,EAAQL,GACxB,OAAOK,EAAOC,MAAK,SAACC,EAAQC,GACxB,OAAIR,EACOO,EAAOZ,GAAKa,EAAOb,GAAK,GAAK,EAE7BY,EAAOZ,GAAKa,EAAOb,GAAK,GAAK,CAE3C,GACJ,CAQwBc,CAAWpB,EAAMgB,OAAQL,GAU9C,OACI,UAAC,EAAAU,SAAD,YACI,gBAAKpB,UAAWC,EAAhB,UACI,oBAAQoB,QAXG,WACnBf,EAAQgB,KAAK,CACTC,SAAUf,EAASe,SACnBX,OAAO,SAAD,OAAWF,EAAc,OAAS,QAG/C,EAKW,kBACUA,EAAc,aAAe,kBAG3C,eAAIV,UAAWC,EAAf,SACKa,EAAaU,KAAI,SAAAC,GAAK,OACnB,SAAC,EAAD,CAEIpB,GAAIoB,EAAMpB,GACVF,OAAQsB,EAAMtB,OACdD,KAAMuB,EAAMvB,MAHPuB,EAAMpB,GAFI,QAWtC,E,SClDD,EAA2B,gCCa3B,EAXsB,WAClB,OACI,iBAAKL,UAAWC,EAAhB,WACI,6CACA,SAAC,KAAD,CAAMD,UAAU,MAAMI,GAAG,aAAzB,2BAKX,ECwBD,EA7BkB,WACd,OAKIsB,EAAAA,EAAAA,GAAQC,EAAAA,IAAc,GAJtBC,EADJ,EACIA,YACAC,EAFJ,EAEIA,OACMC,EAHV,EAGIC,KACAC,EAJJ,EAIIA,MAOJ,OAJAC,EAAAA,EAAAA,YAAU,WACNL,GACH,GAAE,CAACA,IAEW,YAAXC,GAEI,gBAAK7B,UAAU,mBAAf,UACI,SAACkC,EAAA,EAAD,MAKRF,GACO,cAAGhC,UAAU,mBAAb,SAAiCgC,IAG7B,cAAXH,GAA4BC,GAAiBA,EAAaK,QAGvD,SAAC,EAAD,CAAWpB,OAAQe,KAFf,SAAC,EAAD,GAGd,C","sources":["webpack://react-https-tasks/./src/components/quotes/QuoteItem.module.css?127c","components/quotes/QuoteItem.js","webpack://react-https-tasks/./src/components/quotes/QuoteList.module.css?9d5d","components/quotes/QuoteList.js","webpack://react-https-tasks/./src/components/quotes/NoQuotesFound.module.css?2c4b","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"QuoteItem_item__R13vj\"};","import { Link } from 'react-router-dom'\nimport classes from './QuoteItem.module.css'\n\nconst QuoteItem = props => {\n    return (\n        <li className={classes.item}>\n            <figure>\n                <blockquote>\n                    <p>{props.text}</p>\n                </blockquote>\n                <figcaption>{props.author}</figcaption>\n            </figure>\n            <Link to={`quotes/${props.id}`} className='btn'>\n                View Fullscreen\n            </Link>\n        </li>\n    )\n}\n\nexport default QuoteItem\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"QuoteList_list__uJy-r\",\"sorting\":\"QuoteList_sorting__F5jEL\"};","import { Fragment } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nimport QuoteItem from './QuoteItem'\nimport classes from './QuoteList.module.css'\n\nconst sortQuotes = (quotes, isAscending) => {\n    return quotes.sort((quoteA, quoteB) => {\n        if (isAscending) {\n            return quoteA.id > quoteB.id ? 1 : -1\n        } else {\n            return quoteA.id < quoteB.id ? 1 : -1\n        }\n    })\n}\n\nconst QuoteList = props => {\n    const history = useHistory()\n    const location = useLocation()\n\n    const queryParams = new URLSearchParams(location.search)\n    const isAscending = queryParams.get('sort') === 'asc'\n    const sortedQuotes = sortQuotes(props.quotes, isAscending)\n\n    const sortingHandler = () => {\n        history.push({\n            pathname: location.pathname,\n            search: `?sort=${isAscending ? 'desc' : 'asc'}`,\n        })\n        // history.push(`/quotes?sort=${isAscending ? 'desc' : 'asc'}`)\n    }\n\n    return (\n        <Fragment>\n            <div className={classes.sorting}>\n                <button onClick={sortingHandler}>\n                    Sort {isAscending ? 'Descending' : 'Ascending'}\n                </button>\n            </div>\n            <ul className={classes.list}>\n                {sortedQuotes.map(quote => (\n                    <QuoteItem\n                        key={quote.id}\n                        id={quote.id}\n                        author={quote.author}\n                        text={quote.text}\n                    />\n                ))}\n            </ul>\n        </Fragment>\n    )\n}\n\nexport default QuoteList\n","// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NoQuotesFound_noquotes__M3kNw\"};","import { Link } from 'react-router-dom'\nimport classes from './NoQuotesFound.module.css'\n\nconst NoQuotesFound = () => {\n    return (\n        <div className={classes.noquotes}>\n            <p>No quotes found!</p>\n            <Link className='btn' to='/new-quote'>\n                Add a Quote\n            </Link>\n        </div>\n    )\n}\n\nexport default NoQuotesFound\n","import useHttp from '../hooks/use-http'\r\nimport { getAllQuotes } from '../lib/api'\r\nimport QuoteList from './../components/quotes/QuoteList'\r\nimport { useEffect } from 'react'\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\r\nimport NoQuotesFound from './../components/quotes/NoQuotesFound'\r\n\r\nconst AllQuotes = () => {\r\n    const {\r\n        sendRequest,\r\n        status,\r\n        data: loadedQuotes,\r\n        error,\r\n    } = useHttp(getAllQuotes, true)\r\n\r\n    useEffect(() => {\r\n        sendRequest()\r\n    }, [sendRequest])\r\n\r\n    if (status === 'pending') {\r\n        return (\r\n            <div className='centered focused'>\r\n                <LoadingSpinner />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        return <p className='centered focused'>{error}</p>\r\n    }\r\n\r\n    if (status === 'completed' && (!loadedQuotes || !loadedQuotes.length)) {\r\n        return <NoQuotesFound />\r\n    }\r\n    return <QuoteList quotes={loadedQuotes} />\r\n}\r\nexport default AllQuotes\r\n"],"names":["props","className","classes","text","author","to","id","history","useHistory","location","useLocation","isAscending","URLSearchParams","search","get","sortedQuotes","quotes","sort","quoteA","quoteB","sortQuotes","Fragment","onClick","push","pathname","map","quote","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"sourceRoot":""}